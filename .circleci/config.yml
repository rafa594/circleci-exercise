# CircleCI Config file
# Before start, is necesary configure CircleCI to listen the repository in use.
# Also, a context must be created to store the Environment variables used in the file.
# Environment variables that must be setted are:
#   1. AWS_ACCESS_KEY_ID
#   2. AWS_SECRET_ACCESS_KEY_ID
#   3. AWS_SESSION_TOKEN
#   4. AWS_DEFAULT_REGION
#   5. AWS_ECR_IMAGE
#   6. TASKDEFINITION_NAME
#   7. SERVICE_NAME
#   8. CLUSTER_NAME
#   9. AWS_LOG_GROUP

version: 2
jobs:
    dockerbuild:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout
            - run: |
                docker build -t newimage:$CIRCLE_SHA1 .                
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install
                aws ecr get-login-password  | docker login --username AWS --password-stdin $AWS_ECR_IMAGE
                docker tag newimage:$CIRCLE_SHA1 $AWS_ECR_IMAGE:$CIRCLE_SHA1
                docker push $AWS_ECR_IMAGE:$CIRCLE_SHA1


    taskdefinitionUpdate:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout
            - run: |
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install                
                sed -e '
                s#IMAGENAME#'"$AWS_ECR_IMAGE:$CIRCLE_SHA1"'#
                s#SERVICENAME#'"$SERVICE_NAME"'#
                s#LOGGROUP#'"$AWS_LOG_GROUP"'#
                s#REGIONNAME#'"$AWS_DEFAULT_REGION"'#
                s#TASKDEFINITIONNAME#'"$TASKDEFINITION_NAME"'#                
                ' ./taskdefinition.json > td.json                
                aws ecs register-task-definition --cli-input-json file://$HOME/project/td.json > info.json                
                aws ecs update-service --force-new-deployment --service $SERVICE_NAME --task-definition $TASKDEFINITION_NAME --cluster $CLUSTER_NAME > newinfo.json                
                python check.py

workflows:    
    version: 2
    build-workflow:
        jobs:
            - dockerbuild:
                filters:
                    branches:
                        only: master
                context: aws_credentials
                
            - taskdefinitionUpdate:
                filters:
                    branches:
                        only: master
                context: aws_credentials
                requires:
                    - dockerbuild
