version: 2
jobs:
    dockerbuild:
        machine: true
        steps:
            - checkout
            - run: |
                docker build -t rafa-nginx-image:$CIRCLE_SHA1 .
                mkdir -p ~/.aws
                echo "[default]
                aws_access_key_id = $aws_access_key_id
                aws_secret_access_key = $aws_secret_access_key
                aws_session_token = $aws_session_token
                " > ~/.aws/credentials
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install
                aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $aws_ecr_image
                docker tag rafa-nginx-image:$CIRCLE_SHA1 $aws_ecr_image:$CIRCLE_SHA1
                docker push $aws_ecr_image:$CIRCLE_SHA1


    taskdefinitionUpdate:
        machine: true
        steps:
            - checkout
            - run: |
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install
                mkdir -p ~/.aws
                echo "[default]
                aws_access_key_id = $aws_access_key_id
                aws_secret_access_key = $aws_secret_access_key
                aws_session_token = $aws_session_token
                " > ~/.aws/credentials

                sed 's#IMAGENAME#'"$aws_ecr_image:$CIRCLE_SHA1"'#' ./taskdefinition.json > td.json
                
                aws ecs register-task-definition --cli-input-json file://$HOME/project/td.json > info.json

                
                aws ecs update-service --force-new-deployment --service rafa-service --task-definition CircleCITaskDefinition --cluster rafa-ecsECSCluster > newinfo.json
                
                aws ecs list-tasks --cluster rafa-ecsECSCluster --desired-status 'RUNNING' --service-name rafa-service --output text --query 'taskARNS[0]' > tasks.json
                cat tasks.json
                
                for i in $( aws ecs list-tasks --cluster rafa-ecsECSCluster --desired-status 'RUNNING' --output text --query 'taskARNS[*]' ) ; do 
                    aws ecs stop-task --cluster rafa-ecsECSCluster --task $i --reason "Stopped by kill script"  
                done

                for i in {0..9}; do 
                    aws ecs describe-services --services rafa-service --cluster rafa-ecsECSCluster > service.json
                    python check.py
                done

                




                
    
            
                

workflows:
    version: 2
    build-workflow:
        jobs:
            - dockerbuild:
                filters:
                    branches:
                        only: master
                context: aws_credentials
                
            - taskdefinitionUpdate:
                filters:
                    branches:
                        only: master
                context: aws_credentials
                requires:
                    - dockerbuild
